/*
Load Balancer Management API

Load Balancer Management API is an API for managing load balancers.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the LoadBalancerPoolCollection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoadBalancerPoolCollection{}

// LoadBalancerPoolCollection struct for LoadBalancerPoolCollection
type LoadBalancerPoolCollection struct {
	Pools                []LoadBalancerPool `json:"pools"`
	AdditionalProperties map[string]interface{}
}

type _LoadBalancerPoolCollection LoadBalancerPoolCollection

// NewLoadBalancerPoolCollection instantiates a new LoadBalancerPoolCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadBalancerPoolCollection(pools []LoadBalancerPool) *LoadBalancerPoolCollection {
	this := LoadBalancerPoolCollection{}
	this.Pools = pools
	return &this
}

// NewLoadBalancerPoolCollectionWithDefaults instantiates a new LoadBalancerPoolCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadBalancerPoolCollectionWithDefaults() *LoadBalancerPoolCollection {
	this := LoadBalancerPoolCollection{}
	return &this
}

// GetPools returns the Pools field value
func (o *LoadBalancerPoolCollection) GetPools() []LoadBalancerPool {
	if o == nil {
		var ret []LoadBalancerPool
		return ret
	}

	return o.Pools
}

// GetPoolsOk returns a tuple with the Pools field value
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolCollection) GetPoolsOk() ([]LoadBalancerPool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pools, true
}

// SetPools sets field value
func (o *LoadBalancerPoolCollection) SetPools(v []LoadBalancerPool) {
	o.Pools = v
}

func (o LoadBalancerPoolCollection) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoadBalancerPoolCollection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pools"] = o.Pools

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LoadBalancerPoolCollection) UnmarshalJSON(bytes []byte) (err error) {
	varLoadBalancerPoolCollection := _LoadBalancerPoolCollection{}

	err = json.Unmarshal(bytes, &varLoadBalancerPoolCollection)

	if err != nil {
		return err
	}

	*o = LoadBalancerPoolCollection(varLoadBalancerPoolCollection)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "pools")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLoadBalancerPoolCollection struct {
	value *LoadBalancerPoolCollection
	isSet bool
}

func (v NullableLoadBalancerPoolCollection) Get() *LoadBalancerPoolCollection {
	return v.value
}

func (v *NullableLoadBalancerPoolCollection) Set(val *LoadBalancerPoolCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadBalancerPoolCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadBalancerPoolCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadBalancerPoolCollection(val *LoadBalancerPoolCollection) *NullableLoadBalancerPoolCollection {
	return &NullableLoadBalancerPoolCollection{value: val, isSet: true}
}

func (v NullableLoadBalancerPoolCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadBalancerPoolCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
