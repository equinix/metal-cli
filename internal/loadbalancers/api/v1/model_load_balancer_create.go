/*
Load Balancer Management API

Load Balancer Management API is an API for managing load balancers.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the LoadBalancerCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoadBalancerCreate{}

// LoadBalancerCreate struct for LoadBalancerCreate
type LoadBalancerCreate struct {
	// Name of load balancer
	Name string `json:"name"`
	// ID of location load balancer to be deployed in
	LocationId string `json:"location_id"`
	// Port IDs to associate with load balancer
	PortIds []string `json:"port_ids"`
	// ID of load balancer provider
	ProviderId           string `json:"provider_id"`
	AdditionalProperties map[string]interface{}
}

type _LoadBalancerCreate LoadBalancerCreate

// NewLoadBalancerCreate instantiates a new LoadBalancerCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadBalancerCreate(name string, locationId string, portIds []string, providerId string) *LoadBalancerCreate {
	this := LoadBalancerCreate{}
	this.Name = name
	this.LocationId = locationId
	this.PortIds = portIds
	this.ProviderId = providerId
	return &this
}

// NewLoadBalancerCreateWithDefaults instantiates a new LoadBalancerCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadBalancerCreateWithDefaults() *LoadBalancerCreate {
	this := LoadBalancerCreate{}
	return &this
}

// GetName returns the Name field value
func (o *LoadBalancerCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LoadBalancerCreate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LoadBalancerCreate) SetName(v string) {
	o.Name = v
}

// GetLocationId returns the LocationId field value
func (o *LoadBalancerCreate) GetLocationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LocationId
}

// GetLocationIdOk returns a tuple with the LocationId field value
// and a boolean to check if the value has been set.
func (o *LoadBalancerCreate) GetLocationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocationId, true
}

// SetLocationId sets field value
func (o *LoadBalancerCreate) SetLocationId(v string) {
	o.LocationId = v
}

// GetPortIds returns the PortIds field value
func (o *LoadBalancerCreate) GetPortIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.PortIds
}

// GetPortIdsOk returns a tuple with the PortIds field value
// and a boolean to check if the value has been set.
func (o *LoadBalancerCreate) GetPortIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PortIds, true
}

// SetPortIds sets field value
func (o *LoadBalancerCreate) SetPortIds(v []string) {
	o.PortIds = v
}

// GetProviderId returns the ProviderId field value
func (o *LoadBalancerCreate) GetProviderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value
// and a boolean to check if the value has been set.
func (o *LoadBalancerCreate) GetProviderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderId, true
}

// SetProviderId sets field value
func (o *LoadBalancerCreate) SetProviderId(v string) {
	o.ProviderId = v
}

func (o LoadBalancerCreate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoadBalancerCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["location_id"] = o.LocationId
	toSerialize["port_ids"] = o.PortIds
	toSerialize["provider_id"] = o.ProviderId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LoadBalancerCreate) UnmarshalJSON(bytes []byte) (err error) {
	varLoadBalancerCreate := _LoadBalancerCreate{}

	err = json.Unmarshal(bytes, &varLoadBalancerCreate)

	if err != nil {
		return err
	}

	*o = LoadBalancerCreate(varLoadBalancerCreate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "location_id")
		delete(additionalProperties, "port_ids")
		delete(additionalProperties, "provider_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLoadBalancerCreate struct {
	value *LoadBalancerCreate
	isSet bool
}

func (v NullableLoadBalancerCreate) Get() *LoadBalancerCreate {
	return v.value
}

func (v *NullableLoadBalancerCreate) Set(val *LoadBalancerCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadBalancerCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadBalancerCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadBalancerCreate(val *LoadBalancerCreate) *NullableLoadBalancerCreate {
	return &NullableLoadBalancerCreate{value: val, isSet: true}
}

func (v NullableLoadBalancerCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadBalancerCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
