/*
Load Balancer Management API

Load Balancer Management API is an API for managing load balancers.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the LoadBalancerPoolOriginCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoadBalancerPoolOriginCreate{}

// LoadBalancerPoolOriginCreate struct for LoadBalancerPoolOriginCreate
type LoadBalancerPoolOriginCreate struct {
	// A name for the origin
	Name string `json:"name"`
	// IP address of the origin
	Target     string                           `json:"target"`
	PortNumber LoadBalancerPoolOriginPortNumber `json:"port_number"`
	// If the origin is activated
	Active bool `json:"active"`
	// ID of the pool the origin belongs to
	PoolId               string `json:"pool_id"`
	AdditionalProperties map[string]interface{}
}

type _LoadBalancerPoolOriginCreate LoadBalancerPoolOriginCreate

// NewLoadBalancerPoolOriginCreate instantiates a new LoadBalancerPoolOriginCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadBalancerPoolOriginCreate(name string, target string, portNumber LoadBalancerPoolOriginPortNumber, active bool, poolId string) *LoadBalancerPoolOriginCreate {
	this := LoadBalancerPoolOriginCreate{}
	this.Name = name
	this.Target = target
	this.PortNumber = portNumber
	this.Active = active
	this.PoolId = poolId
	return &this
}

// NewLoadBalancerPoolOriginCreateWithDefaults instantiates a new LoadBalancerPoolOriginCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadBalancerPoolOriginCreateWithDefaults() *LoadBalancerPoolOriginCreate {
	this := LoadBalancerPoolOriginCreate{}
	return &this
}

// GetName returns the Name field value
func (o *LoadBalancerPoolOriginCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolOriginCreate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LoadBalancerPoolOriginCreate) SetName(v string) {
	o.Name = v
}

// GetTarget returns the Target field value
func (o *LoadBalancerPoolOriginCreate) GetTarget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolOriginCreate) GetTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *LoadBalancerPoolOriginCreate) SetTarget(v string) {
	o.Target = v
}

// GetPortNumber returns the PortNumber field value
func (o *LoadBalancerPoolOriginCreate) GetPortNumber() LoadBalancerPoolOriginPortNumber {
	if o == nil {
		var ret LoadBalancerPoolOriginPortNumber
		return ret
	}

	return o.PortNumber
}

// GetPortNumberOk returns a tuple with the PortNumber field value
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolOriginCreate) GetPortNumberOk() (*LoadBalancerPoolOriginPortNumber, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PortNumber, true
}

// SetPortNumber sets field value
func (o *LoadBalancerPoolOriginCreate) SetPortNumber(v LoadBalancerPoolOriginPortNumber) {
	o.PortNumber = v
}

// GetActive returns the Active field value
func (o *LoadBalancerPoolOriginCreate) GetActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Active
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolOriginCreate) GetActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Active, true
}

// SetActive sets field value
func (o *LoadBalancerPoolOriginCreate) SetActive(v bool) {
	o.Active = v
}

// GetPoolId returns the PoolId field value
func (o *LoadBalancerPoolOriginCreate) GetPoolId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PoolId
}

// GetPoolIdOk returns a tuple with the PoolId field value
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolOriginCreate) GetPoolIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PoolId, true
}

// SetPoolId sets field value
func (o *LoadBalancerPoolOriginCreate) SetPoolId(v string) {
	o.PoolId = v
}

func (o LoadBalancerPoolOriginCreate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoadBalancerPoolOriginCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["target"] = o.Target
	toSerialize["port_number"] = o.PortNumber
	toSerialize["active"] = o.Active
	toSerialize["pool_id"] = o.PoolId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LoadBalancerPoolOriginCreate) UnmarshalJSON(bytes []byte) (err error) {
	varLoadBalancerPoolOriginCreate := _LoadBalancerPoolOriginCreate{}

	err = json.Unmarshal(bytes, &varLoadBalancerPoolOriginCreate)

	if err != nil {
		return err
	}

	*o = LoadBalancerPoolOriginCreate(varLoadBalancerPoolOriginCreate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "target")
		delete(additionalProperties, "port_number")
		delete(additionalProperties, "active")
		delete(additionalProperties, "pool_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLoadBalancerPoolOriginCreate struct {
	value *LoadBalancerPoolOriginCreate
	isSet bool
}

func (v NullableLoadBalancerPoolOriginCreate) Get() *LoadBalancerPoolOriginCreate {
	return v.value
}

func (v *NullableLoadBalancerPoolOriginCreate) Set(val *LoadBalancerPoolOriginCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadBalancerPoolOriginCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadBalancerPoolOriginCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadBalancerPoolOriginCreate(val *LoadBalancerPoolOriginCreate) *NullableLoadBalancerPoolOriginCreate {
	return &NullableLoadBalancerPoolOriginCreate{value: val, isSet: true}
}

func (v NullableLoadBalancerPoolOriginCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadBalancerPoolOriginCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
