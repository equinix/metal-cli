/*
Load Balancer Management API

Load Balancer Management API is an API for managing load balancers.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the LoadBalancerPoolUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoadBalancerPoolUpdate{}

// LoadBalancerPoolUpdate struct for LoadBalancerPoolUpdate
type LoadBalancerPoolUpdate struct {
	// Name of the load balancer pool
	Name     *string                         `json:"name,omitempty"`
	Protocol *LoadBalancerPoolCreateProtocol `json:"protocol,omitempty"`
	// Add ports to load balancer pool
	AddPortIds []string `json:"add_port_ids,omitempty"`
	// Removed ports from load balancer pool
	RemovePortIds []string `json:"remove_port_ids,omitempty"`
	// Clear all ports from load balancer pool
	ClearPorts *bool `json:"clear_ports,omitempty"`
	// Add origins to load balancer pool
	AddOriginIds []string `json:"add_origin_ids,omitempty"`
	// Removed origins from load balancer pool
	RemoveOriginIds []string `json:"remove_origin_ids,omitempty"`
	// Clear all origins from load balancer pool
	ClearOrigins         *bool `json:"clear_origins,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LoadBalancerPoolUpdate LoadBalancerPoolUpdate

// NewLoadBalancerPoolUpdate instantiates a new LoadBalancerPoolUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadBalancerPoolUpdate() *LoadBalancerPoolUpdate {
	this := LoadBalancerPoolUpdate{}
	return &this
}

// NewLoadBalancerPoolUpdateWithDefaults instantiates a new LoadBalancerPoolUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadBalancerPoolUpdateWithDefaults() *LoadBalancerPoolUpdate {
	this := LoadBalancerPoolUpdate{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LoadBalancerPoolUpdate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolUpdate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LoadBalancerPoolUpdate) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LoadBalancerPoolUpdate) SetName(v string) {
	o.Name = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *LoadBalancerPoolUpdate) GetProtocol() LoadBalancerPoolCreateProtocol {
	if o == nil || IsNil(o.Protocol) {
		var ret LoadBalancerPoolCreateProtocol
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolUpdate) GetProtocolOk() (*LoadBalancerPoolCreateProtocol, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *LoadBalancerPoolUpdate) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given LoadBalancerPoolCreateProtocol and assigns it to the Protocol field.
func (o *LoadBalancerPoolUpdate) SetProtocol(v LoadBalancerPoolCreateProtocol) {
	o.Protocol = &v
}

// GetAddPortIds returns the AddPortIds field value if set, zero value otherwise.
func (o *LoadBalancerPoolUpdate) GetAddPortIds() []string {
	if o == nil || IsNil(o.AddPortIds) {
		var ret []string
		return ret
	}
	return o.AddPortIds
}

// GetAddPortIdsOk returns a tuple with the AddPortIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolUpdate) GetAddPortIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AddPortIds) {
		return nil, false
	}
	return o.AddPortIds, true
}

// HasAddPortIds returns a boolean if a field has been set.
func (o *LoadBalancerPoolUpdate) HasAddPortIds() bool {
	if o != nil && !IsNil(o.AddPortIds) {
		return true
	}

	return false
}

// SetAddPortIds gets a reference to the given []string and assigns it to the AddPortIds field.
func (o *LoadBalancerPoolUpdate) SetAddPortIds(v []string) {
	o.AddPortIds = v
}

// GetRemovePortIds returns the RemovePortIds field value if set, zero value otherwise.
func (o *LoadBalancerPoolUpdate) GetRemovePortIds() []string {
	if o == nil || IsNil(o.RemovePortIds) {
		var ret []string
		return ret
	}
	return o.RemovePortIds
}

// GetRemovePortIdsOk returns a tuple with the RemovePortIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolUpdate) GetRemovePortIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.RemovePortIds) {
		return nil, false
	}
	return o.RemovePortIds, true
}

// HasRemovePortIds returns a boolean if a field has been set.
func (o *LoadBalancerPoolUpdate) HasRemovePortIds() bool {
	if o != nil && !IsNil(o.RemovePortIds) {
		return true
	}

	return false
}

// SetRemovePortIds gets a reference to the given []string and assigns it to the RemovePortIds field.
func (o *LoadBalancerPoolUpdate) SetRemovePortIds(v []string) {
	o.RemovePortIds = v
}

// GetClearPorts returns the ClearPorts field value if set, zero value otherwise.
func (o *LoadBalancerPoolUpdate) GetClearPorts() bool {
	if o == nil || IsNil(o.ClearPorts) {
		var ret bool
		return ret
	}
	return *o.ClearPorts
}

// GetClearPortsOk returns a tuple with the ClearPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolUpdate) GetClearPortsOk() (*bool, bool) {
	if o == nil || IsNil(o.ClearPorts) {
		return nil, false
	}
	return o.ClearPorts, true
}

// HasClearPorts returns a boolean if a field has been set.
func (o *LoadBalancerPoolUpdate) HasClearPorts() bool {
	if o != nil && !IsNil(o.ClearPorts) {
		return true
	}

	return false
}

// SetClearPorts gets a reference to the given bool and assigns it to the ClearPorts field.
func (o *LoadBalancerPoolUpdate) SetClearPorts(v bool) {
	o.ClearPorts = &v
}

// GetAddOriginIds returns the AddOriginIds field value if set, zero value otherwise.
func (o *LoadBalancerPoolUpdate) GetAddOriginIds() []string {
	if o == nil || IsNil(o.AddOriginIds) {
		var ret []string
		return ret
	}
	return o.AddOriginIds
}

// GetAddOriginIdsOk returns a tuple with the AddOriginIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolUpdate) GetAddOriginIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AddOriginIds) {
		return nil, false
	}
	return o.AddOriginIds, true
}

// HasAddOriginIds returns a boolean if a field has been set.
func (o *LoadBalancerPoolUpdate) HasAddOriginIds() bool {
	if o != nil && !IsNil(o.AddOriginIds) {
		return true
	}

	return false
}

// SetAddOriginIds gets a reference to the given []string and assigns it to the AddOriginIds field.
func (o *LoadBalancerPoolUpdate) SetAddOriginIds(v []string) {
	o.AddOriginIds = v
}

// GetRemoveOriginIds returns the RemoveOriginIds field value if set, zero value otherwise.
func (o *LoadBalancerPoolUpdate) GetRemoveOriginIds() []string {
	if o == nil || IsNil(o.RemoveOriginIds) {
		var ret []string
		return ret
	}
	return o.RemoveOriginIds
}

// GetRemoveOriginIdsOk returns a tuple with the RemoveOriginIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolUpdate) GetRemoveOriginIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.RemoveOriginIds) {
		return nil, false
	}
	return o.RemoveOriginIds, true
}

// HasRemoveOriginIds returns a boolean if a field has been set.
func (o *LoadBalancerPoolUpdate) HasRemoveOriginIds() bool {
	if o != nil && !IsNil(o.RemoveOriginIds) {
		return true
	}

	return false
}

// SetRemoveOriginIds gets a reference to the given []string and assigns it to the RemoveOriginIds field.
func (o *LoadBalancerPoolUpdate) SetRemoveOriginIds(v []string) {
	o.RemoveOriginIds = v
}

// GetClearOrigins returns the ClearOrigins field value if set, zero value otherwise.
func (o *LoadBalancerPoolUpdate) GetClearOrigins() bool {
	if o == nil || IsNil(o.ClearOrigins) {
		var ret bool
		return ret
	}
	return *o.ClearOrigins
}

// GetClearOriginsOk returns a tuple with the ClearOrigins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolUpdate) GetClearOriginsOk() (*bool, bool) {
	if o == nil || IsNil(o.ClearOrigins) {
		return nil, false
	}
	return o.ClearOrigins, true
}

// HasClearOrigins returns a boolean if a field has been set.
func (o *LoadBalancerPoolUpdate) HasClearOrigins() bool {
	if o != nil && !IsNil(o.ClearOrigins) {
		return true
	}

	return false
}

// SetClearOrigins gets a reference to the given bool and assigns it to the ClearOrigins field.
func (o *LoadBalancerPoolUpdate) SetClearOrigins(v bool) {
	o.ClearOrigins = &v
}

func (o LoadBalancerPoolUpdate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoadBalancerPoolUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !IsNil(o.AddPortIds) {
		toSerialize["add_port_ids"] = o.AddPortIds
	}
	if !IsNil(o.RemovePortIds) {
		toSerialize["remove_port_ids"] = o.RemovePortIds
	}
	if !IsNil(o.ClearPorts) {
		toSerialize["clear_ports"] = o.ClearPorts
	}
	if !IsNil(o.AddOriginIds) {
		toSerialize["add_origin_ids"] = o.AddOriginIds
	}
	if !IsNil(o.RemoveOriginIds) {
		toSerialize["remove_origin_ids"] = o.RemoveOriginIds
	}
	if !IsNil(o.ClearOrigins) {
		toSerialize["clear_origins"] = o.ClearOrigins
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LoadBalancerPoolUpdate) UnmarshalJSON(bytes []byte) (err error) {
	varLoadBalancerPoolUpdate := _LoadBalancerPoolUpdate{}

	err = json.Unmarshal(bytes, &varLoadBalancerPoolUpdate)

	if err != nil {
		return err
	}

	*o = LoadBalancerPoolUpdate(varLoadBalancerPoolUpdate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "protocol")
		delete(additionalProperties, "add_port_ids")
		delete(additionalProperties, "remove_port_ids")
		delete(additionalProperties, "clear_ports")
		delete(additionalProperties, "add_origin_ids")
		delete(additionalProperties, "remove_origin_ids")
		delete(additionalProperties, "clear_origins")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLoadBalancerPoolUpdate struct {
	value *LoadBalancerPoolUpdate
	isSet bool
}

func (v NullableLoadBalancerPoolUpdate) Get() *LoadBalancerPoolUpdate {
	return v.value
}

func (v *NullableLoadBalancerPoolUpdate) Set(val *LoadBalancerPoolUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadBalancerPoolUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadBalancerPoolUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadBalancerPoolUpdate(val *LoadBalancerPoolUpdate) *NullableLoadBalancerPoolUpdate {
	return &NullableLoadBalancerPoolUpdate{value: val, isSet: true}
}

func (v NullableLoadBalancerPoolUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadBalancerPoolUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
