/*
Load Balancer Management API

Load Balancer Management API is an API for managing load balancers.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the ResourceCreatedResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceCreatedResponse{}

// ResourceCreatedResponse struct for ResourceCreatedResponse
type ResourceCreatedResponse struct {
	// API Version
	Version *string `json:"version,omitempty"`
	// Response message
	Message *string `json:"message,omitempty"`
	// ID of resource
	Id *string `json:"id,omitempty"`
	// Status of response
	Status               *int32 `json:"status,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ResourceCreatedResponse ResourceCreatedResponse

// NewResourceCreatedResponse instantiates a new ResourceCreatedResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceCreatedResponse() *ResourceCreatedResponse {
	this := ResourceCreatedResponse{}
	return &this
}

// NewResourceCreatedResponseWithDefaults instantiates a new ResourceCreatedResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceCreatedResponseWithDefaults() *ResourceCreatedResponse {
	this := ResourceCreatedResponse{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ResourceCreatedResponse) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceCreatedResponse) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ResourceCreatedResponse) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ResourceCreatedResponse) SetVersion(v string) {
	o.Version = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ResourceCreatedResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceCreatedResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ResourceCreatedResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ResourceCreatedResponse) SetMessage(v string) {
	o.Message = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ResourceCreatedResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceCreatedResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ResourceCreatedResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ResourceCreatedResponse) SetId(v string) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ResourceCreatedResponse) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceCreatedResponse) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ResourceCreatedResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *ResourceCreatedResponse) SetStatus(v int32) {
	o.Status = &v
}

func (o ResourceCreatedResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceCreatedResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ResourceCreatedResponse) UnmarshalJSON(bytes []byte) (err error) {
	varResourceCreatedResponse := _ResourceCreatedResponse{}

	err = json.Unmarshal(bytes, &varResourceCreatedResponse)

	if err != nil {
		return err
	}

	*o = ResourceCreatedResponse(varResourceCreatedResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "version")
		delete(additionalProperties, "message")
		delete(additionalProperties, "id")
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableResourceCreatedResponse struct {
	value *ResourceCreatedResponse
	isSet bool
}

func (v NullableResourceCreatedResponse) Get() *ResourceCreatedResponse {
	return v.value
}

func (v *NullableResourceCreatedResponse) Set(val *ResourceCreatedResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceCreatedResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceCreatedResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceCreatedResponse(val *ResourceCreatedResponse) *NullableResourceCreatedResponse {
	return &NullableResourceCreatedResponse{value: val, isSet: true}
}

func (v NullableResourceCreatedResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceCreatedResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
