/*
Load Balancer Management API

Load Balancer Management API is an API for managing load balancers.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the LoadBalancerPoolCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoadBalancerPoolCreate{}

// LoadBalancerPoolCreate struct for LoadBalancerPoolCreate
type LoadBalancerPoolCreate struct {
	// Name of the load balancer pool
	Name     string                         `json:"name"`
	Protocol LoadBalancerPoolCreateProtocol `json:"protocol"`
	// Port ids to associate with pool
	PortIds []string `json:"port_ids,omitempty"`
	// Origin ids to associate with pool
	OriginIds            []string `json:"origin_ids,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LoadBalancerPoolCreate LoadBalancerPoolCreate

// NewLoadBalancerPoolCreate instantiates a new LoadBalancerPoolCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadBalancerPoolCreate(name string, protocol LoadBalancerPoolCreateProtocol) *LoadBalancerPoolCreate {
	this := LoadBalancerPoolCreate{}
	this.Name = name
	this.Protocol = protocol
	return &this
}

// NewLoadBalancerPoolCreateWithDefaults instantiates a new LoadBalancerPoolCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadBalancerPoolCreateWithDefaults() *LoadBalancerPoolCreate {
	this := LoadBalancerPoolCreate{}
	return &this
}

// GetName returns the Name field value
func (o *LoadBalancerPoolCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolCreate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LoadBalancerPoolCreate) SetName(v string) {
	o.Name = v
}

// GetProtocol returns the Protocol field value
func (o *LoadBalancerPoolCreate) GetProtocol() LoadBalancerPoolCreateProtocol {
	if o == nil {
		var ret LoadBalancerPoolCreateProtocol
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolCreate) GetProtocolOk() (*LoadBalancerPoolCreateProtocol, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *LoadBalancerPoolCreate) SetProtocol(v LoadBalancerPoolCreateProtocol) {
	o.Protocol = v
}

// GetPortIds returns the PortIds field value if set, zero value otherwise.
func (o *LoadBalancerPoolCreate) GetPortIds() []string {
	if o == nil || IsNil(o.PortIds) {
		var ret []string
		return ret
	}
	return o.PortIds
}

// GetPortIdsOk returns a tuple with the PortIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolCreate) GetPortIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.PortIds) {
		return nil, false
	}
	return o.PortIds, true
}

// HasPortIds returns a boolean if a field has been set.
func (o *LoadBalancerPoolCreate) HasPortIds() bool {
	if o != nil && !IsNil(o.PortIds) {
		return true
	}

	return false
}

// SetPortIds gets a reference to the given []string and assigns it to the PortIds field.
func (o *LoadBalancerPoolCreate) SetPortIds(v []string) {
	o.PortIds = v
}

// GetOriginIds returns the OriginIds field value if set, zero value otherwise.
func (o *LoadBalancerPoolCreate) GetOriginIds() []string {
	if o == nil || IsNil(o.OriginIds) {
		var ret []string
		return ret
	}
	return o.OriginIds
}

// GetOriginIdsOk returns a tuple with the OriginIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolCreate) GetOriginIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.OriginIds) {
		return nil, false
	}
	return o.OriginIds, true
}

// HasOriginIds returns a boolean if a field has been set.
func (o *LoadBalancerPoolCreate) HasOriginIds() bool {
	if o != nil && !IsNil(o.OriginIds) {
		return true
	}

	return false
}

// SetOriginIds gets a reference to the given []string and assigns it to the OriginIds field.
func (o *LoadBalancerPoolCreate) SetOriginIds(v []string) {
	o.OriginIds = v
}

func (o LoadBalancerPoolCreate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoadBalancerPoolCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["protocol"] = o.Protocol
	if !IsNil(o.PortIds) {
		toSerialize["port_ids"] = o.PortIds
	}
	if !IsNil(o.OriginIds) {
		toSerialize["origin_ids"] = o.OriginIds
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LoadBalancerPoolCreate) UnmarshalJSON(bytes []byte) (err error) {
	varLoadBalancerPoolCreate := _LoadBalancerPoolCreate{}

	err = json.Unmarshal(bytes, &varLoadBalancerPoolCreate)

	if err != nil {
		return err
	}

	*o = LoadBalancerPoolCreate(varLoadBalancerPoolCreate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "protocol")
		delete(additionalProperties, "port_ids")
		delete(additionalProperties, "origin_ids")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLoadBalancerPoolCreate struct {
	value *LoadBalancerPoolCreate
	isSet bool
}

func (v NullableLoadBalancerPoolCreate) Get() *LoadBalancerPoolCreate {
	return v.value
}

func (v *NullableLoadBalancerPoolCreate) Set(val *LoadBalancerPoolCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadBalancerPoolCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadBalancerPoolCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadBalancerPoolCreate(val *LoadBalancerPoolCreate) *NullableLoadBalancerPoolCreate {
	return &NullableLoadBalancerPoolCreate{value: val, isSet: true}
}

func (v NullableLoadBalancerPoolCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadBalancerPoolCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
